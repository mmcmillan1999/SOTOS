# CLAUDE.md - Fair-Play Application

## Application Context

This is the **Fair-Play Application** - a tournament execution and management system that consumes tournament layouts from the parent Fair-Play Engine.

### Relationship to Parent System
- **Parent Engine Location**: `../` (TS2 root)
- **Data Source**: The Fair-Play Engine calculates optimal tournament pairings and generates layout files
- **Application Role**: Consume, display, and manage the execution of tournament layouts
- **Schedule Files**: `./TourneySchedules/` - Contains tournament JSON files generated by the engine

## Expected Data Structure (Cliff Notes)

The engine provides tournament data in JSON format optimized for application routing and display:

### Simplified Match Format
```json
{
  "tournament": {
    "metadata": {
      "name": "string",
      "type": "SINGLES_ROUND_ROBIN_TEAMS",
      "total_players": 20,
      "total_rounds": 10,
      "courts": 5
    },
    "matches": [
      {
        "round": 1,
        "court": 1,
        "team1": [8, 2],
        "team2": [20, 3],
        "display": "R1-C1: P8,P2 vs P20,P3"
      },
      {
        "round": 1,
        "court": 2,
        "team1": [1, 19],
        "team2": [6, 11],
        "display": "R1-C2: P1,P19 vs P6,P11"
      }
      // ... continues for all matches
    ],
    "rounds_detail": [
      {
        "round": 1,
        "courts": [
          { "court": 1, "players": [8, 2, 20, 3] },
          { "court": 2, "players": [1, 19, 6, 11] },
          { "court": 3, "players": [17, 5, 7, 12] },
          { "court": 4, "players": [15, 16, 18, 9] },
          { "court": 5, "players": [13, 4, 10, 14] }
        ],
        "sitting_out": []
      }
      // ... continues for all rounds
    ]
  }
}
```

### Key Data Elements
- **Round Number**: Which round of play (1-10)
- **Court Assignment**: Which court (1-5)
- **Player Positions**: Arrays showing [P1, P2] vs [P3, P4]
- **Display String**: Pre-formatted for UI "R1-C1: P8,P2 vs P20,P3"

## Application Vision Questions

When you're ready to build this application, I'll need to understand:

### 1. User Experience
- Who are the primary users? (Tournament organizers, players, spectators?)
- What devices will they use? (Mobile, tablet, desktop, TV displays?)
- What's the primary interaction model? (Live scoring, bracket viewing, player check-in?)

### 2. Core Features
- Real-time score entry and updates?
- Player/team management and registration?
- Bracket visualization and progression?
- Schedule management and notifications?
- Historical data and statistics?

### 3. Technical Architecture
- Web app, mobile app, or desktop application?
- Real-time updates needed? (WebSockets, polling?)
- Multi-user collaboration requirements?
- Offline capability needed?
- Integration with other systems?

### 4. Display & Interaction
- How should brackets/rounds be visualized?
- Live scoreboards for spectators?
- Player check-in system?
- Court assignment displays?
- Results publishing?

### 5. Data Management
- How will tournament layouts be imported?
- Where will results be stored?
- Export capabilities needed?
- Backup and recovery strategy?

### 6. Game-Specific Requirements
- What sport/game is this for?
- Specific scoring rules?
- Tournament format variations?
- Special rules or constraints?

## Next Steps

When you initialize work in this folder, we'll:
1. Define the specific application vision and requirements
2. Choose the technology stack
3. Design the user interface
4. Build the core tournament execution features
5. Integrate with the Fair-Play Engine outputs

## Project Structure
```
FAIR-PLAY-APP/
├── TourneySchedules/   # Tournament JSON files from engine
│   └── README.md       # File naming conventions
├── src/                # Application source code (to be created)
├── docs/               # Application documentation (to be created)
└── tests/              # Application tests (to be created)
```

### TourneySchedules Folder
The parent Fair-Play Engine populates the `TourneySchedules/` folder with tournament layout files following the naming convention:
`[TYPE]_P[PLAYERS]_R[ROUNDS]_C[COURTS]_[DATE].json`

Example: `SRRBT_P20_R10_C5_20250906.json` = Singles Round Robin By Teams, 20 players, 10 rounds, 5 courts

---
*This CLAUDE.md will be rewritten once we define the specific application requirements and vision.*